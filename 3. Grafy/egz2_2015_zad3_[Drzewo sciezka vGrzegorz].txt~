//Dana jest następująca struktura opisująca drzewo:
struct Tree{
	Tree *parent; //rodzic, lub NULL jeśli to korzeń
	Tree *left, *right; //lewe I prawe dziecko
	int w_left, w_right; //wagi krawędzi do lewego i do prawego dziecka (dodatnie)
}

/*
	Proszę opisad (bez implementacji) możliwie jak najszybszy algorytm, 
	ktory mając na wejściu drzewo opisane przez strukturą Tree znajduje długośd najdłuższej 
	ścieżki między dwoma węzłami drzewa (prosta ścieżka to taka, 
	która nie odwiedza żadnego węzła więcej niż raz). 
	(Na potrzeby algorytmu mogą paostwo uzupełnid strukturę Tree o dalsze pola.)
*/

Ja zrobie nastepujaca strukture
struct Tree{
	Tree *parent; //rodzic, lub NULL jeśli to korzeń
	Tree *left, *right; //lewe I prawe dziecko
	int w_left, w_right; //wagi krawędzi do lewego i do prawego dziecka (dodatnie)
	int l_path, l_path_to_root;	//najdluzsza sciezka w poddrzewie(lacznie z tym wezlem), najdluzsza sciezka do tego wezla
}

void updateTreeInformatins(Tree* proot){
	if(!proot->left && !proot->right){
		proot->l_path = proot->l_path_to_root = 0;
		return'
	}
	int lpath, rpath;
	lpath = rpath = 0;
	if(proot->left){
		updateTreeInformation(proot->left)	
	}

}
